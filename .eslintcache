[{"C:\\works\\testwork\\counter-v3\\src\\App.tsx":"1","C:\\works\\testwork\\counter-v3\\src\\counter\\Counter.tsx":"2","C:\\works\\testwork\\counter-v3\\src\\SetCounter\\SetCounter.tsx":"3","C:\\works\\testwork\\counter-v3\\src\\reportWebVitals.ts":"4"},{"size":2574,"mtime":1617442014898,"results":"5","hashOfConfig":"6"},{"size":959,"mtime":1617527165214,"results":"7","hashOfConfig":"6"},{"size":2326,"mtime":1617374880761,"results":"8","hashOfConfig":"6"},{"size":425,"mtime":1608134968316,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"lk90vf",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\works\\testwork\\counter-v3\\src\\App.tsx",["19","20","21"],"import React, {ChangeEvent, useEffect, useState} from 'react';\nimport './App.css';\nimport s from \"./wrapper.module.css\"\nimport SetCounter from \"./SetCounter/SetCounter\";\nimport Counter from \"./counter/Counter\";\n\nfunction App() {\n\n    let [count, setCount] = useState<number>(0)\n    let [startCountValue, setStartCountValue] = useState<number>(0)\n    let [maxCountValue, setMaxCountValue] = useState<number>(1)\n    let [useCountValue, setUseCountValue] = useState<number>()\n    let [error, setError] = useState(false)\n\n    const inc = () => {\n        if (count !== maxCountValue) {\n            setCount(count + 1)\n        }\n    }\n\n    useEffect( () => {\n        let startValueAsString = localStorage.getItem('start value')\n        let maxValueAsString = localStorage.getItem('max value')\n\n        if (startValueAsString) {\n            let newStartValue = JSON.parse(startValueAsString)\n            setStartCountValue(newStartValue)\n        } if (maxValueAsString) {\n            let newMaxValue = JSON.parse(maxValueAsString)\n            setMaxCountValue(newMaxValue)\n        }\n    }, [])\n\n    useEffect( () => {\n        localStorage.setItem('start value', JSON.stringify(startCountValue))\n        localStorage.setItem('max value', JSON.stringify(maxCountValue))\n    }, [startCountValue, maxCountValue])\n\n    const resetCount = () => {\n        setCount(startCountValue)\n    }\n\n    const setStateCount = () => {\n        setCount(startCountValue)\n    }\n\n    // function changeCountStatus(startCountValue:number) {\n    //\n    //     if (startCountValue > 0 ||startCountValue === maxCountValue ) {\n    //         setError(true)\n    //     }else {\n    //         setError(false)\n    //     }\n    //     setStartCountValue(startCountValue)\n    // }\n\n\n    return (\n        <div className=\"App\">\n\n            <div className={s.wrapper}>\n                <SetCounter\n                    maxCountValue={maxCountValue}\n                    startCountValue={startCountValue}\n                    setStartCountValue={setStartCountValue}\n                    setMaxCountValue={setMaxCountValue}\n                    error={error}\n                    setError={setError}\n                    setStateCount={setStateCount}\n                />\n\n                <Counter\n                    count={count}\n                    resetCount={resetCount}\n                    inc={inc}\n                    startCountValue={startCountValue}\n                    maxCountValue={maxCountValue}\n                    error={error}\n                />\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","C:\\works\\testwork\\counter-v3\\src\\counter\\Counter.tsx",["22","23","24"],"C:\\works\\testwork\\counter-v3\\src\\SetCounter\\SetCounter.tsx",["25","26"],"C:\\works\\testwork\\counter-v3\\src\\reportWebVitals.ts",[],{"ruleId":"27","severity":1,"message":"28","line":1,"column":16,"nodeType":"29","messageId":"30","endLine":1,"endColumn":27},{"ruleId":"27","severity":1,"message":"31","line":12,"column":10,"nodeType":"29","messageId":"30","endLine":12,"endColumn":23},{"ruleId":"27","severity":1,"message":"32","line":12,"column":25,"nodeType":"29","messageId":"30","endLine":12,"endColumn":41},{"ruleId":"27","severity":1,"message":"28","line":1,"column":16,"nodeType":"29","messageId":"30","endLine":1,"endColumn":27},{"ruleId":"27","severity":1,"message":"33","line":2,"column":8,"nodeType":"29","messageId":"30","endLine":2,"endColumn":21},{"ruleId":"27","severity":1,"message":"34","line":16,"column":9,"nodeType":"29","messageId":"30","endLine":16,"endColumn":14},{"ruleId":"27","severity":1,"message":"35","line":1,"column":29,"nodeType":"29","messageId":"30","endLine":1,"endColumn":37},{"ruleId":"27","severity":1,"message":"36","line":19,"column":9,"nodeType":"29","messageId":"30","endLine":19,"endColumn":14},"@typescript-eslint/no-unused-vars","'ChangeEvent' is defined but never used.","Identifier","unusedVar","'useCountValue' is assigned a value but never used.","'setUseCountValue' is assigned a value but never used.","'backgroundImg' is defined but never used.","'count' is assigned a value but never used.","'useState' is defined but never used.","'error' is assigned a value but never used."]